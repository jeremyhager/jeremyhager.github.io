(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{120:function(e,t,n){"use strict";n.d(t,"a",(function(){return u})),n.d(t,"b",(function(){return w}));var r=n(0),a=n.n(r);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function c(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?c(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):c(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=a.a.createContext({}),p=function(e){var t=a.a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=p(e.components);return a.a.createElement(l.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},b=a.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,c=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),u=p(n),b=r,w=u["".concat(c,".").concat(b)]||u[b]||m[b]||o;return n?a.a.createElement(w,i(i({ref:t},l),{},{components:n})):a.a.createElement(w,i({ref:t},l))}));function w(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,c=new Array(o);c[0]=b;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:r,c[1]=i;for(var l=2;l<o;l++)c[l]=n[l];return a.a.createElement.apply(null,c)}return a.a.createElement.apply(null,n)}b.displayName="MDXCreateElement"},62:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return c})),n.d(t,"metadata",(function(){return i})),n.d(t,"rightToc",(function(){return s})),n.d(t,"default",(function(){return p}));var r=n(2),a=n(6),o=(n(0),n(120)),c={id:"creating-new-network",title:"Creating new VM network",sidebar_label:"Creating new VM network"},i={unversionedId:"creating-new-network",id:"creating-new-network",isDocsHomePage:!1,title:"Creating new VM network",description:"Create an the xml for an isolated network:",source:"@site/docs\\creating-new-network.md",slug:"/creating-new-network",permalink:"/docs/creating-new-network",editUrl:"https://github.com/jeremyhager/yugawa-website/edit/master/docs/creating-new-network.md",version:"current",sidebar_label:"Creating new VM network"},s=[],l={rightToc:s};function p(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(o.b)("wrapper",Object(r.a)({},l,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("p",null,"Create an the xml for an isolated network:"),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-bash",metastring:'title="/tmp/VMswitch.xml"',title:'"/tmp/VMswitch.xml"'}),'<network>\n <name>VMnetwork</name>\n <bridge name="VMnetwork"/>\n <ip address="172.16.0.1" netmask="255.255.0.0"/>\n</network>\n')),Object(o.b)("p",null,"Define the new network:"),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-bash",metastring:'title="virsh"',title:'"virsh"'}),"net-define /tmp/vmswitch.xml\n#Network VMnetwork defined from /tmp/vmswitch.xml\nnet-autostart VMnetwork\n#Network VMnetwork marked as autostarted\nnet-start VMnetwork\n#Network VMnetwork started\n")),Object(o.b)("p",null,"Create a new vm with 2 interfaces:"),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-bash"}),'sudo virt-install --connect qemu:///system \\\n     --network=bridge:virbr0 \\\n     --network=bridge:VMnetwork \\\n     --initrd-inject="/home/jeremy/ks.cfg" \\\n     --extra-args="ks=file:/ks.cfg console=ttyS0" \\\n     -n router \\\n     -f /home/imgs/router.img \\\n     -r 1024 \\\n     -s 12 \\\n     --location=/home/isos/CentOS-7-x86_64-DVD-1908.iso \\\n     --os-type=centos7.0 \\\n     --accelerate --hvm --graphics none\n')),Object(o.b)("p",null,"Set the IP on the new interface (in this case, eth1):"),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-bash",metastring:'title="/etc/sysconfig/network-scripts/ifcfg-eth1"',title:'"/etc/sysconfig/network-scripts/ifcfg-eth1"'}),'BOOTPROTO="static"\nIPADDR=192.168.86.10\nNETMASK=255.255.255.0\nNETWORK=192.168.86.0\nGATEWAY=192.168.86.1\nBRAODCAST=192.168.1.255\nDNS1=192.168.86.1\nDNS2=8.8.8.8\n')))}p.isMDXComponent=!0}}]);