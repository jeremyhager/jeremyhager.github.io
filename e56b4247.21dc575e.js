(window.webpackJsonp=window.webpackJsonp||[]).push([[66],{126:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return o})),a.d(t,"metadata",(function(){return i})),a.d(t,"rightToc",(function(){return c})),a.d(t,"default",(function(){return p}));var n=a(2),r=a(6),l=(a(0),a(140)),o={id:"enrolling-foreman-ldap",title:"Enrolling Foreman",sidebar_label:"Enrolling Foreman"},i={unversionedId:"enrolling-foreman-ldap",id:"enrolling-foreman-ldap",isDocsHomePage:!1,title:"Enrolling Foreman",description:"Preparations",source:"@site/docs/enrolling-foreaman-ldap.md",slug:"/enrolling-foreman-ldap",permalink:"/docs/enrolling-foreman-ldap",editUrl:"https://github.com/jeremyhager/yugawa-website/edit/master/docs/enrolling-foreaman-ldap.md",version:"current",sidebar_label:"Enrolling Foreman",sidebar:"docs",previous:{title:"Creating users",permalink:"/docs/creating-ldap-users"},next:{title:"Manual Enrollment",permalink:"/docs/manual-enrollment-ldap"}},c=[{value:"Preparations",id:"preparations",children:[{value:"Install the necessary tools:",id:"install-the-necessary-tools",children:[]},{value:"Run the ipa client installer:",id:"run-the-ipa-client-installer",children:[]},{value:"Set up smart proxy",id:"set-up-smart-proxy",children:[]},{value:"Re-run the installer to enable realms",id:"re-run-the-installer-to-enable-realms",children:[]}]},{value:"Create realm in foreman",id:"create-realm-in-foreman",children:[{value:"Associate realm with hostgroup",id:"associate-realm-with-hostgroup",children:[]}]},{value:"Sources",id:"sources",children:[]}],s={rightToc:c};function p(e){var t=e.components,a=Object(r.a)(e,["components"]);return Object(l.b)("wrapper",Object(n.a)({},s,a,{components:t,mdxType:"MDXLayout"}),Object(l.b)("h2",{id:"preparations"},"Preparations"),Object(l.b)("h3",{id:"install-the-necessary-tools"},"Install the necessary tools:"),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"sudo yum -y install ipa-client foreman-proxy ipa-admintools\n")),Object(l.b)("h3",{id:"run-the-ipa-client-installer"},"Run the ipa client installer:"),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"sudo ipa-client-install\n")),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-text",metastring:'title="expected output" {5}',title:'"expected','output"':!0,"{5}":!0}),"WARNING: ntpd time&date synchronization service will not be configured as\nconflicting service (chronyd) is enabled\nUse --force-ntpd option to disable it and force configuration of ntpd\n\nDiscovery was successful!\nClient hostname: foreman.internal.virtnet\nRealm: INTERNAL.VIRTNET\nDNS Domain: internal.virtnet\nIPA Server: ldap1.internal.virtnet\nBaseDN: dc=internal,dc=virtnet\n")),Object(l.b)("p",null,"If it was configured successfully, refer to the following table:"),Object(l.b)("table",null,Object(l.b)("thead",{parentName:"table"},Object(l.b)("tr",{parentName:"thead"},Object(l.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Questions"),Object(l.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Answers"))),Object(l.b)("tbody",{parentName:"table"},Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Continue to configure the system with these values? ","[no]",":"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"yes")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"User authorized to enroll computers:"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"admin")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Password for ",Object(l.b)("a",Object(n.a)({parentName:"td"},{href:"mailto:admin@INTERNAL.VIRTNET"}),"admin@INTERNAL.VIRTNET"),":"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"[","admin password","]")))),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-text",metastring:'title="expected output"',title:'"expected','output"':!0}),"...\nConfiguring internal.virtnet as NIS domain.\nClient configuration complete.\nThe ipa-client-install command was successful\n")),Object(l.b)("h3",{id:"set-up-smart-proxy"},"Set up smart proxy"),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"sudo foreman-prepare-realm admin realm-proxy\n")),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-text",metastring:'title="expected output"',title:'"expected','output"':!0}),"-------------------------\nNumber of members added 1\n-------------------------\nKeytab successfully retrieved and stored in: freeipa.keytab\nRealm Proxy User:    realm-proxy\nRealm Proxy Keytab:  /home/jeremy/freeipa.keytab\n")),Object(l.b)("p",null,"Copy/move the keytab file into ",Object(l.b)("inlineCode",{parentName:"p"},"/etc/foreman-proxy")," and set the permissions:"),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"sudo mv /home/jeremy/freeipa.keytab /etc/foreman-proxy\nsudo chown foreman-proxy:foreman-proxy /etc/foreman-proxy/freeipa.keytab\n")),Object(l.b)("p",null,"Enable realm via https:"),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-yaml",metastring:'title="/etc/foreman-proxy/settings.d/realm.yml" {3}',title:'"/etc/foreman-proxy/settings.d/realm.yml"',"{3}":!0}),"---\n# Can be true, false, or http/https to enable just one of the protocols\n:enabled: https\n\n# Available providers:\n#   realm_ad\n#   realm_freeipa\n:use_provider: realm_freeipa\n")),Object(l.b)("p",null,"Trust the IPA certificate authority:"),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"sudo cp /etc/ipa/ca.crt /etc/pki/ca-trust/source/anchors/ipa.crt\nsudo update-ca-trust enable\nsudo update-ca-trust\n")),Object(l.b)("h3",{id:"re-run-the-installer-to-enable-realms"},"Re-run the installer to enable realms"),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"sudo foreman-installer --scenario katello --foreman-proxy-realm true \\\n    --foreman-proxy-realm-keytab /etc/foreman-proxy/freeipa.keytab \\\n    --foreman-proxy-realm-principal realm-proxy\n")),Object(l.b)("h2",{id:"create-realm-in-foreman"},"Create realm in foreman"),Object(l.b)("p",null,"Now that foreman is set up for realms, create a realm in foreman:"),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),'hammer realm create --location "Default Location" \\\n    --name "INTERNAL.VIRTNET" \\\n    --organization "internal.virtnet" \\\n    --realm-proxy-id 1 \\\n    --realm-type "FreeIPA"\n')),Object(l.b)("h3",{id:"associate-realm-with-hostgroup"},"Associate realm with hostgroup"),Object(l.b)("p",null,"Update the hostgroup in foreman to include the realm id. This will automatically add the hosts within the group to the realm:"),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"hammer hostgroup update --id 1 --realm-id 1\n")),Object(l.b)("h2",{id:"sources"},"Sources"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",Object(n.a)({parentName:"li"},{href:"https://access.redhat.com/documentation/en-us/red_hat_satellite/6.0/html/user_guide/chap-red_hat_satellite-user_guide-configuring_identity_management_in_red_hat_satellite"}),"ldap guide for Satellite")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",Object(n.a)({parentName:"li"},{href:"https://theforeman.org/manuals/2.3/index.html#4.3.8Realm"}),"Realm guide for foreman"))))}p.isMDXComponent=!0},140:function(e,t,a){"use strict";a.d(t,"a",(function(){return b})),a.d(t,"b",(function(){return d}));var n=a(0),r=a.n(n);function l(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){l(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function c(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=r.a.createContext({}),p=function(e){var t=r.a.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},b=function(e){var t=p(e.components);return r.a.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},m=r.a.forwardRef((function(e,t){var a=e.components,n=e.mdxType,l=e.originalType,o=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),b=p(a),m=n,d=b["".concat(o,".").concat(m)]||b[m]||u[m]||l;return a?r.a.createElement(d,i(i({ref:t},s),{},{components:a})):r.a.createElement(d,i({ref:t},s))}));function d(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var l=a.length,o=new Array(l);o[0]=m;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType="string"==typeof e?e:n,o[1]=i;for(var s=2;s<l;s++)o[s]=a[s];return r.a.createElement.apply(null,o)}return r.a.createElement.apply(null,a)}m.displayName="MDXCreateElement"}}]);