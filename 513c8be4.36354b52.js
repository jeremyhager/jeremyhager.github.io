(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{134:function(e,t,n){"use strict";n.d(t,"a",(function(){return b})),n.d(t,"b",(function(){return h}));var r=n(0),a=n.n(r);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function c(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?c(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):c(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var d=a.a.createContext({}),l=function(e){var t=a.a.useContext(d),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},b=function(e){var t=l(e.components);return a.a.createElement(d.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},f=a.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,c=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),b=l(n),f=r,h=b["".concat(c,".").concat(f)]||b[f]||p[f]||i;return n?a.a.createElement(h,o(o({ref:t},d),{},{components:n})):a.a.createElement(h,o({ref:t},d))}));function h(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,c=new Array(i);c[0]=f;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:r,c[1]=o;for(var d=2;d<i;d++)c[d]=n[d];return a.a.createElement.apply(null,c)}return a.a.createElement.apply(null,n)}f.displayName="MDXCreateElement"},82:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return c})),n.d(t,"metadata",(function(){return o})),n.d(t,"rightToc",(function(){return s})),n.d(t,"default",(function(){return l}));var r=n(2),a=n(6),i=(n(0),n(134)),c={id:"creating-new-network",title:"Creating new VM network",sidebar_label:"Creating new VM network"},o={unversionedId:"creating-new-network",id:"creating-new-network",isDocsHomePage:!1,title:"Creating new VM network",description:"Create an the xml for an isolated network:",source:"@site/docs/creating-new-network.md",slug:"/creating-new-network",permalink:"/docs/creating-new-network",editUrl:"https://github.com/jeremyhager/yugawa-website/edit/master/docs/creating-new-network.md",version:"current",sidebar_label:"Creating new VM network",sidebar:"docs",previous:{title:"PfSense Router",permalink:"/docs/pfsense-router"},next:{title:"pfSense as a VM",permalink:"/docs/pfsense-as-vm"}},s=[{value:"Create an the xml for an isolated network:",id:"create-an-the-xml-for-an-isolated-network",children:[]},{value:"Define the new network:",id:"define-the-new-network",children:[]},{value:"Change a VM network",id:"change-a-vm-network",children:[{value:"Get current interfaces",id:"get-current-interfaces",children:[]},{value:"Attach a new interface",id:"attach-a-new-interface",children:[]},{value:"Detach old interface",id:"detach-old-interface",children:[]}]},{value:"Troubleshooting",id:"troubleshooting",children:[{value:"Setting static IP address for a new interface",id:"setting-static-ip-address-for-a-new-interface",children:[]}]},{value:"Source",id:"source",children:[]}],d={rightToc:s};function l(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(i.b)("wrapper",Object(r.a)({},d,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("h2",{id:"create-an-the-xml-for-an-isolated-network"},"Create an the xml for an isolated network:"),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-bash",metastring:'title="/tmp/VMswitch.xml"',title:'"/tmp/VMswitch.xml"'}),'<network>\n <name>VMnetwork</name>\n <bridge name="VMnetwork"/>\n <ip address="172.16.0.1" netmask="255.255.0.0"/>\n</network>\n')),Object(i.b)("h2",{id:"define-the-new-network"},"Define the new network:"),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-bash",metastring:'title="virsh"',title:'"virsh"'}),"net-define /tmp/vmswitch.xml\n#Network VMnetwork defined from /tmp/vmswitch.xml\nnet-autostart VMnetwork\n#Network VMnetwork marked as autostarted\nnet-start VMnetwork\n#Network VMnetwork started\n")),Object(i.b)("h2",{id:"change-a-vm-network"},"Change a VM network"),Object(i.b)("h3",{id:"get-current-interfaces"},"Get current interfaces"),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-bash",metastring:'title="virsh"',title:'"virsh"'}),"domiflist dns-dhcp\n")),Object(i.b)("h3",{id:"attach-a-new-interface"},"Attach a new interface"),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-bash"}),"virsh attach-interface \\\n     --domain dns-dhcp \\\n     --type network \\\n     --source VMnetwork \\\n     --model virtio \\\n     --config\n")),Object(i.b)("h3",{id:"detach-old-interface"},"Detach old interface"),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-bash",metastring:'title="virsh"',title:'"virsh"'}),"destroy dns-dhcp\ndetach-interface --domain dns-dhcp --type bridge --mac 52:54:00:8a:92:ea --config\n")),Object(i.b)("p",null,"Start the VM again:"),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-bash",metastring:'title="virsh"',title:'"virsh"'}),"start dns-dhcp\n")),Object(i.b)("h2",{id:"troubleshooting"},"Troubleshooting"),Object(i.b)("h3",{id:"setting-static-ip-address-for-a-new-interface"},"Setting static IP address for a new interface"),Object(i.b)("p",null,"You may need to create the interface within ",Object(i.b)("inlineCode",{parentName:"p"},"network-scripts/")," after adding an interface on the hypervisor. This can be easily scripts, as follows:"),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-bash",metastring:'title="~/set-new-nic.sh"',title:'"~/set-new-nic.sh"'}),'#!/bin/bash\n#finds name of new interface, creates ifcfg file if need-be, then populates with parameters\ninterface=`ls /sys/class/net | grep -v lo`\nifcfg_file=`ls /etc/sysconfig/network-scripts | grep ifcfg-$interface`\n\nif [ -z "${ifcfg_file}" ]; then\n     echo "==> ifcfg-${interface} does not exist, creating now..."\n     read -p "Enter IP address: " ip_addr\n     read -p "Enter network mask: " net_mask\n     read -p "Enter network ID: " net_work\n     read -p "Enter broadcast: " broad_cast\n     read -p "Enter gateway: " gate_way\n     mac_addr=`ip addr show $interface | awk \'FNR == 2 {print $2}\'`\n\n     read -p "Enter DNS server (leave blank for self): " dns_svr\n     if [ -z "${dns_svr}" ]; then\n          echo "==> Setting DNS server to 127.0.0.1"\n          dns_svr="127.0.0.1"\n     fi\n\n     tee /etc/sysconfig/network-scripts/ifcfg-$interface << EOF > /dev/null\nDEVICE=$interface\nHWADDR=$mac_addr\nBOOTPROTO=static\nONBOOT="yes"\nIPADDR=$ip_addr\nNETMASK=$net_mask\nNETWORK=$net_work\nBROADCAST=$broad_cast\nDNS1=$dns_svr\nGATEWAY=$gate_way\nEOF\necho "==> ifcfg-${interface} has been created."\nelse\n     echo "${ifcfg_file} exists, check the directory /etc/sysconfig/network-scripts"\nfi\n')),Object(i.b)("div",{className:"admonition admonition-tip alert alert--success"},Object(i.b)("div",Object(r.a)({parentName:"div"},{className:"admonition-heading"}),Object(i.b)("h5",{parentName:"div"},Object(i.b)("span",Object(r.a)({parentName:"h5"},{className:"admonition-icon"}),Object(i.b)("svg",Object(r.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"}),Object(i.b)("path",Object(r.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"})))),"tip")),Object(i.b)("div",Object(r.a)({parentName:"div"},{className:"admonition-content"}),Object(i.b)("p",{parentName:"div"},"The original network-scripts/ifcfg-eth0 file can (and probably should) be deleted."))),Object(i.b)("h4",{id:"machine-networking-may-need-to-be-restarted"},"Machine networking may need to be restarted"),Object(i.b)("p",null,"After setting the IP the machine's network service may need to be restarted once or twice for the IP to take affect."),Object(i.b)("h2",{id:"source"},"Source"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(r.a)({parentName:"li"},{href:"https://kashyapc.fedorapeople.org/virt/add-network-card-in-guest.txt"}),"Add a second NIC for a libvirt guest")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(r.a)({parentName:"li"},{href:"https://superuser.com/a/753582"}),"List available NICs"))))}l.isMDXComponent=!0}}]);